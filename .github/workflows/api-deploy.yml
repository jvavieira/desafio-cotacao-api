name: Deploy API Container

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: us-east-1
      ECR_REPOSITORY: cotacao-api
      IMAGE_TAG: latest

    steps:
      - name: Checkout c√≥digo
        uses: actions/checkout@v3

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22'

      - name: Rodar testes e validar cobertura m√≠nima
        run: |
          echo "üèÅ Iniciando testes com cobertura..."
          go test ./... -coverprofile=coverage.out

          echo "üîé Arquivos inclu√≠dos na cobertura:"
          cat coverage.out

          echo "üßπ Filtrando arquivos indesejados..."
          grep -Ev "cmd/|main.go|models" coverage.out > coverage-filtered.out

          echo "üîç Arquivos ap√≥s filtro:"
          cat coverage-filtered.out

          echo "üìä Calculando total de cobertura..."
          total=$(go tool cover -func=coverage-filtered.out | grep total | awk '{print substr($3, 1, length($3)-1)}')
          echo "Cobertura filtrada: $total%"

          threshold=80.0
          result=$(echo "$total >= $threshold" | bc)
          if [ "$result" -ne 1 ]; then
            echo "‚ùå Cobertura abaixo de $threshold% (atual: $total%)"
            exit 1
          else
            echo "‚úÖ Cobertura m√≠nima atingida!"
          fi

      - name: An√°lise de vulnerabilidades com Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: docker.io/library/golang:1.22

      - name: Configurar credenciais AWS
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login no Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build e Push da imagem da API
        run: |
          docker build -t $ECR_REPOSITORY:$IMAGE_TAG .
          docker tag $ECR_REPOSITORY:$IMAGE_TAG ${{ steps.login-ecr.outputs.registry }}/$ECR_REPOSITORY:$IMAGE_TAG
          docker push ${{ steps.login-ecr.outputs.registry }}/$ECR_REPOSITORY:$IMAGE_TAG
